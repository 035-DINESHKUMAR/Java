1.package com.mycompany.oopssp;
import java.util.*;
public class OOPSSP
{
    public static void main(String[] args) {
        Scanner Scan = new Scanner(System.in);
        int m1,m2,m3,m4,m5,n;
        System.out.println("Enter the number of Students : ");
        n = Scan.nextInt();
        stu[] st = new stu[n];
        for(int i=0;i<n;i++)
        {
            System.out.println("Enter the marks for five Subject : ");
            m1 = Scan.nextInt();
            m2 = Scan.nextInt();
            m3 = Scan.nextInt();
            m4 = Scan.nextInt();
            m5 = Scan.nextInt();
            st[i] = new stu(m1,m2,m3,m4,m5);
            st[i].showstatus();
            st[i].ShowGradePointsMarks();
        }
        Scan.close();
    }
}
class stu
{
    int m1,m2,m3,m4,m5,Avg,sum,Gradepoints;
    stu(int m1,int m2,int m3,int m4,int m5)
    {
           this.m1 = m1;
           this.m2 = m2;
           this.m3 = m3;
           this.m4 = m4;
           this.m5 = m5;
    }
    void showstatus()
    {
        sum = m1+m2+m3+m4+m5;
        Avg = sum / 5;
        if((Avg>=91) && (Avg<=100))
        {
            System.out.println("Outstanding Performance!");
            Gradepoints+= 10;
        }
        else if((Avg>=81) && (Avg<=90))
        {
            System.out.println("Excellent Performance!");
            Gradepoints+= 9;
        }
        else if((Avg>=71) && (Avg<=80))
        {
            System.out.println("Excellent Performance!");
            Gradepoints+= 8;
        }
        else if((Avg>=61) && (Avg<=70))
        {
            System.out.println("Excellent Performance!");
            Gradepoints+= 7;
        }
        else if((Avg>=50) && (Avg<=60))
        { 
            System.out.println("Excellent Performance!");
            Gradepoints+= 6;
        }
        else
        {
            System.out.println("Perform well in next Semester");
            Gradepoints+= 0;
        }
    }
    void ShowGradePointsMarks()
    {
        System.out.println("The marks scored "+sum+" "+"and"+" "+"the obtained Gradepoints"+" "+Gradepoints);
    }
}

2.import java.util.*;
public class ComplexNumbers 
{
    public static void main(String[] args) {
        Scanner Scan = new Scanner(System.in);
        int a,b;
        System.out.println("Enter the value of RealNumber[a] : ");
        a = Scan.nextInt();
        System.out.println("Enter the value of ImaginaryNumber[b] : ");
        b = Scan.nextInt();
        complex com = new complex(a,b);
        System.out.println("1-Sum 2-Sub 3-Mul 4-Div");
        System.out.println("Enter the choice : ");
        int choice = Scan.nextInt();
        switch(choice)
        {
            case 1->
            {
                com.add();
                break;
            }
            case 2->
            {
                com.sub();
                break;
            }
            case 3->
            {
                com.mul();
                break;
            }
            case 4->
            {
                com.div();
                break;
            }
            default->
            {
               System.out.println("Invalid choice!");
               break;
            }
        }
    }   
}
class complex
{
    Scanner Scan = new Scanner(System.in);
    int RealNo,ImaginaryNo,a,b,Result;
    complex(int RealNo,int ImaginaryNo)
    {
        this.RealNo = RealNo;
        this.ImaginaryNo = ImaginaryNo;
        System.out.println("Enter the value of Second RealNumber : ");
        a = Scan.nextInt();
        System.out.println("Enter the value of Second ImaginaryNumber : ");
        b = Scan.nextInt();
    }
    void add()
    {
        System.out.println("The Resultant is : "+(RealNo+a)+"+"+(ImaginaryNo+b)+"i");
    }
    void sub()
    {
        System.out.println("The Resultant is : "+(RealNo-a)+"+"+(ImaginaryNo-b)+"i"); 
    }
    void mul()
    {
        System.out.println("The Resultant is : "+(RealNo*a)+"+"+(ImaginaryNo)+"i");
    }
    void div()
    {
        System.out.println("The Resultant is : "+(RealNo/a)+"+"+(ImaginaryNo/b)+"i");
    }
}
3.import java.util.*;
import java.io.*;
public class PhoneNumber 
{
    public static void main(String[] args) throws IOException {
        Scanner Scan = new Scanner(System.in);
        FileOutputStream fout = new FileOutputStream("PhoneNumberFormat.java");
        String PhoneNumber;
        System.out.println("Enter the PhoneNumber : ");
        PhoneNumber = Scan.next();
        Result res = new Result(PhoneNumber);
        try
        {
            if((PhoneNumber.length())<10 || (PhoneNumber.length())>10)
            {
                throw new InvalidNumbersException("Invalid length of PhoneNumber!");
            }
            else
            {
                System.out.println("The PhoneNumber Format is : "+res.result());
            }
        }catch(InvalidNumbersException in)
        {
            System.out.println(in.getMessage());
        }
        String Message = "PhoneFormat : ";
        byte[] b1 = Message.getBytes();
        byte[] b = PhoneNumber.getBytes();
        fout.write(b1);
        fout.write(b);
        fout.close();
    }    
}
class InvalidNumbersException extends Exception
{
    public InvalidNumbersException(String msg)
    {
        super(msg);
    }
}
class Result
{
    String PhoneNumber;
    Result(String PhoneNumber)
    {
        this.PhoneNumber = PhoneNumber;
    }
    String result()
    {
        String Firstpart = "("+PhoneNumber.substring(0, 3)+")"+" ";
        String Middlepart = PhoneNumber.substring(3, 6)+"-";
        String Lastpart = PhoneNumber.substring(6);
        String Result = Firstpart+Middlepart+Lastpart;
        return Result;
    }
    
}
4.import java.util.*;
public class Address
{
    public static void main(String[] args) {
        Scanner Scan = new Scanner(System.in);
        String Address,Name;
        System.out.println("Enter the Name : ");
        Name = Scan.nextLine();
        System.out.println("Enter the Address : ");
        Address = Scan.nextLine();
        String Result = "";
        String[] s = Name.split(" ");
        String[] s1 = Address.split(" ");
        for(String news : s)
        {
            Result+= news.substring(0,1);
        }
        Result+= s1[0];
        System.out.println("The Newly Constructed ID is : "+Result);
    }   
}
5.import java.util.*;
public class Queue 
{
    public static void main(String[] args) {
        Scanner Scan = new Scanner(System.in);
        int front,rear,choice,nv,flag = 0;
        front = rear = -1;
        int[] queue = new int[10];
        MyQueue mq = new MyQueue(queue,front,rear);
        do
        {
            System.out.println("1-Enqueue 2-Dequeue 3-Display 4-Exit");
            System.out.println("Enter the choice : ");
            choice = Scan.nextInt();
            switch(choice)
            {
                case 1->
                {
                    System.out.println("Enter the element to be inserted : ");
                    nv = Scan.nextInt();
                    mq.enqueue(nv);
                    break;
                }
                case 2->
                {
                    System.out.println("The element to be dequeued : "+mq.dequeue());
                    break;
                }
                case 3->
                {
                    System.out.println("The elements in the queue are... ");
                    mq.display();
                    break;
                }
                case 4->
                {
                    System.out.println("All the operations are done...");
                    flag = 1;
                    break;
                }
            }
        }while(flag!=1);
    }   
}
interface QueueOperations
{
    void enqueue(int nv);
    int dequeue();
    void display();  
}
class MyQueue implements QueueOperations
{
    int[] queue = new int[10];
    int front,rear;
    MyQueue(int[] queue,int front,int rear)
    {
        this.queue = queue;
        this.front = front;
        this.rear = rear;
    }
    @Override
    public void enqueue(int nv)
    {
        if(front == -1 && rear == -1)
        {
            front= rear= 0;
            queue[front] = queue[rear] = nv;
        }
        else
        {
            rear++;
            queue[rear] = nv;
        }
    }
    @Override
    public int dequeue()
    {
        int element = queue[front];
        front++;
        return element;
    }
    @Override
    public void display()
    {
        for(int i=front;i<rear+1;i++)
        {
            System.out.println(queue[i]);
        }
    }
}
